apply plugin: 'com.android.application'

android {
    compileSdkVersion 28

    /*多渠道设置*/ // AndroidManifest.xml 里面UMENG_CHANNEL的value为 ${UMENG_CHANNEL_VALUE}
    productFlavors {

        dev {
            manifestPlaceholders = [
                    UMENG_CHANNEL_VALUE : "dev",
                    UMENG_CHANNEL_APPKEY: "5b73d987a40fa33a1e00017e"
            ]
        }

        facebook {
            manifestPlaceholders = [
                    UMENG_CHANNEL_VALUE : "facebook",
                    UMENG_CHANNEL_APPKEY: "5b73b265b27b0a300c00035c"
            ]
        }
        theia {
            manifestPlaceholders = [
                    UMENG_CHANNEL_VALUE : "theia",
                    UMENG_CHANNEL_APPKEY: "5b73b265b27b0a300c00035c"
            ]
        }
        biyongbao {
            manifestPlaceholders = [
                    UMENG_CHANNEL_VALUE : "biyongbao",
                    UMENG_CHANNEL_APPKEY: "5b73b265b27b0a300c00035c"
            ]
        }

//        productFlavors.all { flavor ->
//            flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
//        }

    }

    defaultConfig {
        applicationId "com.cdkj.tha"
        minSdkVersion 16
        targetSdkVersion 26
        versionCode 20
        versionName "2.0.0"
        flavorDimensions "20"

        multiDexEnabled true

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath false
                arguments = [moduleName: project.getName()]
            }
        }

        ndk {
            abiFilters "armeabi" , "x86"
        }
    }

    signingConfigs {
        config {
            storeFile file("../tha.jks")
            storePassword "tha123456"
            keyAlias "tha"
            keyPassword "thakey123456"
        }
    }


    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    buildTypes {

        release {
            buildConfigField "boolean", "IS_DEBUG", "false"
            buildConfigField "String", "umeng", "\"5b73b265b27b0a300c00035c\"" //友盟统计key
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

//            ndk {
//                // 需要将 x86 架构过滤掉
//                abiFilters "armeabi", "armeabi-v7a", "arm64-v8a"
//            }
        }

        devtest {
            buildConfigField "boolean", "IS_DEBUG", "true"
            buildConfigField "String", "umeng", "\"5b73d987a40fa33a1e00017e\""
            minifyEnabled false
        }

        debug {
            signingConfig signingConfigs.config
            buildConfigField "boolean", "IS_DEBUG", "true"
            buildConfigField "String", "umeng", "\"5b73d987a40fa33a1e00017e\""
            minifyEnabled false
        }

    }

//    dexOptions {
//        incremental true
//        javaMaxHeapSize "4g"
//    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "THA_${variant.buildType.name}_${variant.productFlavors[0].name}_${variant.versionName}_${releaseTime()}.apk"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dataBinding {
        enabled true
    }

    sourceSets.main {
        jniLibs.srcDirs = ['libs']
    }

    packagingOptions {
        exclude 'META-INF/rxjava.properties'
        exclude 'META-INF/spring.tooling'
        exclude 'META-INF/spring.handlers'
        exclude 'META-INF/spring.schemas'
        exclude 'META-INF/ASL2.0'
        exclude 'version.properties'
        // ... and any other excludes go here
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(':cdcommon')
    // Banner
    implementation 'com.youth.banner:banner:1.4.10'
    //    // SwitchButton
    //    implementation 'com.kyleduo.switchbutton:library:1.4.4'
    //路由
    api 'com.alibaba:arouter-api:1.3.1'
    annotationProcessor 'com.alibaba:arouter-compiler:1.1.4'
    // multidex
    implementation 'com.android.support:multidex:1.0.3'
    // 二维码
    api 'cn.yipianfengye.android:zxing-library:2.2'
    implementation 'com.google.android:flexbox:1.0.0'
    implementation 'org.bitcoinj:bitcoinj-core:0.14.7'
    implementation 'org.javamoney:moneta:0.9'
    implementation 'org.web3j:core:3.3.1-android'
    //    implementation "org.ethereum:ethereumj-core:1.6.+"
    implementation 'com.github.razerdp:BasePopup:1.9.4'
    /*debug 数据库调试*/
    debugImplementation 'com.amitshekhar.android:debug-db:1.0.1'
    //选择框
    implementation 'com.contrarywind:Android-PickerView:4.1.4'
    implementation 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:+'
    implementation 'com.sina.weibo.sdk:core:4.3.0:openDefaultRelease@aar'
    //
    implementation 'com.github.PhilJay:MPAndroidChart:v3.0.3'
    // iden
    implementation(name: 'idauthsdk', ext: 'aar')
    // 测滑菜单
    implementation 'com.github.mcxtzhang:SwipeDelMenuLayout:V1.3.0'
//    implementation files('/Users/lei/Downloads/pinyin4j/lib/pinyin4j-2.5.0.jar')//这个本来是本地的,我将它下载下来放到了lib里面了
}

///格式化打完完成后APK名称中的时间
def releaseTime() {
    return new Date().format("yyyyMMdd", TimeZone.getTimeZone("UTC+8"))
}
